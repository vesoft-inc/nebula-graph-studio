syntax = "v1"

type (
	ExecNGQLParams {
		Gql       string   `json:"gql"`
		ParamList []string `json:"paramList,optional"`
		Space     string   `json:"space,optional"`
	}
	BatchExecNGQLParams {
		Gqls      []string `json:"gqls"`
		ParamList []string `json:"paramList,optional"`
		Space     string   `json:"space,optional"`
	}
	ConnectDBParams {
		Address       string `json:"address"`
		Port          int    `json:"port"`
		Authorization string `header:"Authorization"`
	}
	AnyResponse {
		Data interface{} `json:"data"`
	}
	ExecSeqNGQLResult {
		OK bool `json:"ok"`
	}
)

@server(
	group: gateway
	prefix: api-nebula/db
)

service studio-api {
	@doc "Exec NGQL"
	@handler ExecNGQL
	post /exec(ExecNGQLParams) returns (AnyResponse)
	
	@doc "BatchExec NGQL"
	@handler BatchExecNGQL
	post /batchExec(BatchExecNGQLParams) returns (AnyResponse)
	
	@doc "Exec Sequence NGQL"
	@handler ExecSeqNGQL
	post /exec_seq(ExecNGQLParams) returns (ExecSeqNGQLResult)
}

@server(
	group: gateway
	prefix: api-nebula/db
)

service studio-api {
	@doc "Connect DB"
	@handler Connect
	post /connect(ConnectDBParams)
	
	@doc "Disonnect DB"
	@handler Disonnect
	post /disconnect returns (AnyResponse)
}
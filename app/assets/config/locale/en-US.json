{
  "common": {
    "requestError": "Request Error",
    "currentSpace": "Current Graph Space",
    "languageSelect": "Language",
    "seeTheHistory": "History",
    "table": "Table",
    "log": "Log",
    "record": "Record",
    "sorryNGQLCannotBeEmpty": "Sorry, nGQL cannot be empty",
    "disablesUseToSwitchSpace": "Switching space from console is not allowed by current role",
    "NGQLHistoryList": "nGQL History",
    "spaceTip": "Only required when you need to execute queries in a specified space.",
    "empty": "Clear",
    "run": "Run",
    "console": "Console",
    "explore": "Explore",
    "ok": "OK",
    "success": "Success",
    "fail": "Fail",
    "noData": "There is no data",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "import": "Import",
    "help": "Help",
    "use": "Use Manual",
    "release": "New Version",
    "nebula": "Nebula",
    "setting": "Setting",
    "feedback": "Feedback",
    "forum": "Help Forum",
    "forumLink": "https://discuss.nebula-graph.io/",
    "ask": "Are you sure to proceed?",
    "output": "Export CSV File",
    "openInExplore": "Open In Explore",
    "schema": "Schema",
    "create": "Create",
    "serialNumber": "No.",
    "name": "Name",
    "operation": "Operations",
    "delete": "Delete",
    "optionalParameters": "Optional Parameters",
    "exportNGQL": "View nGQL",
    "field": "Field",
    "relatedProperties": "Related Properties",
    "type": "Type",
    "edit": "Edit",
    "deleteSuccess": "Deleted successfully",
    "propertyName": "Property Name",
    "dataType": "Data Type",
    "allowNull": "Allow Null",
    "defaults": "Defaults",
    "addProperty": "Add Property",
    "updateSuccess": "Updated Successfully",
    "add": "Add",
    "tag": "Tag",
    "edge": "Edge Type",
    "index": "Index",
    "list": "List",
    "yes": "Yes",
    "no": "No",
    "graph": "Graph",
    "description": "Description",
    "zoomOut": "Zoom Out",
    "zoomIn": "Zoom In",
    "move": "Move",
    "rollback": "Rollback",
    "unlock": "Unlock",
    "lock": "Lock",
    "moreSuggestion": "More Suggestions",
    "algorithm": "Algorithm",
    "viewDocs": "View Docs",
    "hotKeys": "Shortcut Keys",
    "show": "Show",
    "selected": "Selected",
    "search": "Search",
    "color": "Color",
    "icon": "Icon",
    "copy": "Copy",
    "copySuccess": "Copied to clipboard",
    "expansionConditions": "Expansion conditions",
    "total": "Total",
    "exportSelectVertexes": "Export Vertexes to CSV",
    "exportSelectEdges": "Export Edges to CSV",
    "noSelectedData": "No data currently selected",
    "namePlaceholder": "Please enter a search name",
    "comment": "Comment"
  },
  "NGQLOutput": {
    "success": "Execution successful!"
  },
  "warning": {
    "configServer": "Please configure the nebula server",
    "connectError": "Connection refused, please configure server again"
  },
  "configServer": {
    "connect": "Connect",
    "host": "Host",
    "username": "Username",
    "password": "Password",
    "success": "succeed",
    "fail": "Failed",
    "clear": "Clear Connection",
    "title": "Configure Server"
  },
  "formRules": {
    "hostRequired": "Host Required",
    "usernameRequired": "Username Required",
    "passwordRequired": "Password Required",
    "nodeIdError": "The format is invalid, should be one node per line, split by \\n like: \nid1\nid2\nid3",
    "idRequired": "The id field is mandatory",
    "positiveIntegerRequired": "Please enter a non-negative integer",
    "nameValidate": "The name must start with a letter, and it only supports English letters, numbers and underscores",
    "nameRequired": "Please enter the name",
    "numberRequired": "Please enter a positive integer",
    "replicaLimit": "Replica factor must not exceed the number of your current online machines({number})",
    "propertyRequired": "Please enter the property name",
    "defaultRequired": "Please enter the default value",
    "ttlRequired": "Please select the corresponding property, and the data type of the property must be integer or timestamp",
    "ttlDurationRequired": "Please enter the time (in seconds)",
    "dataTypeRequired": "Please select the data type",
    "fixedStringLength": "Fixed String length must be a positive integer"
  },
  "console": {
    "cost": "Cost",
    "execTime": "Execution Time",
    "exportVertex": "Please choose the column representing vertex IDs from the table",
    "exportEdge": "Please choose the columns representing source vertex ID, destination vertex ID, and rank of an edge",
    "showSubgraphs": "View Subgraphs",
    "deleteHistory": "Clear History"
  },
  "explore": {
    "clear": "Clear",
    "clearTip": "Are you sure to proceed the cleanup of the renderred graph view?",
    "startWithVertices": "Start with Vertices",
    "addConfirm": "Add",
    "expand": "Expand",
    "unExpand": "Undo Expand",
    "undo": "Undo",
    "deleteSelectNodes": "Remove Selected Nodes",
    "fileImport": "Import File",
    "importPlaceholder": "Enter VIDs or other data for VID generation, one data per line, and split them by pressing the Enter key. Here is an example:\nstring1\nstring2\nstring3",
    "outgoing": "Outgoing",
    "incoming": "Incoming",
    "bidirect": "Bidirect",
    "filter": "Custom filter conditions",
    "operator": "Operator",
    "value": "Value",
    "selectSpace": "Please select the space",
    "selectReminder": "The selection of space will cleanup the renderred graph view, are you sure to proceed?",
    "zoom": "Zoom",
    "showTags": "Show Tags",
    "showEdges": "Show Edges",
    "confirm": "Confirm",
    "vertexStyle": "Vertex Color/Icon",
    "quantityLimit": "Query Limit",
    "colorGroupByTag": "Group by vertex tag",
    "noVertexPrompt": "No vertices on the board. ",
    "search": "Start graph exploration",
    "queryById": "Query by VID",
    "queryByIndex": "Query by Index",
    "queryByCustom": "Custom Query",
    "idToBeQueried": "Specify Vertex ID",
    "idPretreatment": "Pre-process Vertex IDs",
    "indexQueryPrompt_prefix": "In the ",
    "indexQueryPrompt_suffix": " space, no tag indexes are found, so query by index is not available.",
    "indexQueryPrompt2": "Please create indexes on the tags. Here is an example:",
    "runCodeInConsole": "Execute queries in the console",
    "indexLink": "For more information about index, see its ",
    "documentIntroduction": "documentation",
    "selectIndex": "Select a Index",
    "paramFilter": "Use Index",
    "relationship": "Logical Operator",
    "operationConfirm": "This Delete operation will clear the following fields. Are you sure you want to continue the operation?",
    "quiry": "Query",
    "customQueryDescription": "Enter the statements in the console. When the results are returned, click the Open in Explore button as shown in the preceding figure to explore the graph.",
    "openInConsole": "Go to Console",
    "insertMethodSelect": "How do you like to render the new data with the existing graph view, incrementally or wipe the graph view first?",
    "incrementalInsertion": "Incrementally Render",
    "insertAfterClear": "Wipe and Render",
    "emptyIndex": "No Index",
    "indexConditionDescription": "To use a composite index for a query, we should either filter all fields or the left matching contiguous fields in sequence. That is, the first field is mandatory and skipping field is not allowed",
    "timestampInput": "Only numbers are supported for the timestamp field",
    "documentIntroductionUrl": "https://docs.nebula-graph.io/2.6.1/3.ngql-guide/14.native-index-statements/",
    "customQueryUrl": "https://cloud-cdn.nebula-graph.com.cn/studio-resource/go-to-explore_en.png",
    "pretreatmentExplaination": "Hash can pre-process data of the bool, double, int, or string type to generate VIDs, but UUID can pre-process data of the string type only. To generate VIDs by pre-processing strings, enclose each string with single or double quotes.",
    "exportToImg": "Export Graph",
    "exportToCSV":"Export CSV",
    "export":"Export",
    "toBlobError": "Export failed. The current canvas size is too large. Please zoom out to retry.",
    "expandTip": "Double-click any vertex to explore its related vertices and edges.",
    "hotKeysInstructions": "Shortcut Keys Instruction",
    "graphAlgorithm": "Graph Algorithm",
    "srcId": "Src ID",
    "dstId": "Dst ID",
    "relation": "Relation",
    "direction": "Direction",
    "stepLimit": "Step Limit",
    "allPath": "All path",
    "shortestPath": "Shortest Path",
    "noLoopPath": "NoLoop Path",
    "algorithmParams": "Algorithm Parameters",
    "steps": "Steps",
    "singleStep": "Single",
    "rangeStep": "Range",
    "addCondition": "Add condition",
    "customStyle": "Custom Color/Icon",
    "nodeSearch":"Artboard node search",
    "searchEmpty": "No data found",
    "selectedVertexes": "Selected Vertexes",
    "selectedEdges": "Selected Edges",
    "viewDetails": "View Details",
    "expandItem": "Expand",
    "collapseItem": "Collapse",
    "searchTip": "The following comparison operators are currently supported [=, >, <, !=, <>, <=, >=]",
    "expressionError": "Expression error",
    "expandTips": "Double-click the vertex to quickly expand according to the current configuration by default",
    "missingParams": "Missing parameters",
    "emptyIndexTips": "No attribute index currently does not support the data query function in Explore, Please select index with attribute for query",
    "docForFindPath": "https://docs.nebula-graph.io/2.5.0/3.ngql-guide/16.subgraph-and-path/2.find-path/"
  },
  "import": {
    "import": "Import",
    "selectSpace": "Select Space",
    "uploadFile": "Upload Files",
    "vertex": "Map Vertices",
    "edge": "Map Edges",
    "runImport": "Start Import",
    "next": "Next",
    "goback": "Prev",
    "mountPath": "Mount Path",
    "importConfigValidationSuccess": "The configuration validation was successful",
    "mountPathPlaceholder": "Please input the docker data mount path",
    "fileName": "Name",
    "withHeader": "Header",
    "fileType": "Type",
    "fileSize": "Size",
    "fileTitle": "Select Files",
    "fileSizeErrorMsg": "File must smaller than 100 MB",
    "preview": "Preview",
    "bindDatasource": "Bind Datasource",
    "confirm": "Confirm",
    "stopImportFailed": "Stop Import Failed",
    "uploadFailed": "Upload Failed",
    "importResults": "Import Information",
    "newImport": "New Import",
    "endImport": "Stop Import",
    "againImport": "Import Again",
    "prop": "Prop",
    "propTip": "{name}'s Property",
    "mapping": "CSV Index",
    "mappingTip": "The index of the csv file",
    "setMappingTip": "Make the prop {prop} map to csv column{index}",
    "typeTip": "Prop Type",
    "setVertexId": "Set ID",
    "setVertexIdTip": "Set current prop as vertex id",
    "useHash": "ID Hash",
    "useHashTip": "VertexId Process Method",
    "unset": "Original ID",
    "uuid": "UUID",
    "hash": "Hash",
    "setSrc": "Set SrcId",
    "setSrcTip": "Set field's value as edge source id",
    "setDst": "Set DstId",
    "setDstTip": "Set field's value as edge destination id",
    "setRank": "Set Rank",
    "setRankTip": "Set field's value as edge rank",
    "edgeText": "Edge",
    "choose": "Mapping",
    "ignore": "Ignore",
    "vertexText": "Vertex",
    "createConfigError": "Create config file error",
    "importErrorInfo": "Error importing data. Please check the configuration or data file",
    "clearAllConfigInfo": "Confirm to clear all config？",
    "promptConfigInfo": "The configuration cannot be empty",
    "configFile": "Configuration File: ",
    "logFile":"Log File: ",
    "vertexesFile": "Vertices Files: ",
    "vertexFile": "The Vertex File: ",
    "vertexErrorFilePath": "Error Vertex File: ",
    "edgesFilePath": "Edges Files: ",
    "edgeFilePath": "The Edge Files: ",
    "edgeErrorFilePath": "Error Edge File Path: ",
    "clearoAllConfigInfo": "Confirm to clear all config？",
    "all": "All",
    "mountPathWarning": "Import data need to config the WORKING_DIR env variable before starting.",
    "notExist": "Not exist",
    "importError": "Import Error",
    "importMappingError": "The data file configuration map import failed",
    "importFormatError": "Data file format is not uniform",
    "importFileConfigError": "Data file configuration related error",
    "importFileDownloadError": "Data file download failed",
    "importFileError": "File related error",
    "importNebulaError": "Error associated with instance interaction",
    "datasource": "DataSource",
    "indexNotEmpty": "column index can't be null.",
    "reset": "Reset",
    "fileUploading": "Upload in progress. If you leave this page now, only the uploaded data are stored.",
    "importFinished": "Import task has ended."
  },
  "schema": {
    "spaceList": "Graph Space List",
    "backToSpaceList": "Graph Space List",
    "partitionNumDescription": "partition_num specifies the number of partitions in one replica. The default value is 100. It is usually 5 times the number of hard disks in the cluster.",
    "replicaFactorDescription": "replica_factor specifies the number of replicas in the cluster. The default replica factor is 1. The suggested number is 3 in cluster. It is usually 3 in production. Due to the majority voting principle, it must set to be odd.",
    "charsetDescription": "charset is short for character set. A character set is a set of symbols and encodings. The default value is utf8.",
    "collateDescription": "A collation is a set of rules for comparing characters in a character set. The default value is utf8_bin.",
    "vidTypeDescription": "Specifies the data type of vertex IDs (VIDs) in a graph space. ",
    "createSuccess": "Create Successfully",
    "defineFields": "Define Properties",
    "setTTL": "Set TTL",
    "uniqProperty": "Property name cannot be duplicated",
    "timestampFormat": "Supported data inserting methods: <br />1. call function now()  <br />2. call function timestamp(), for example: timestamp('2021-07-05T06:18:43.984000')  <br />3. Input the timestamp directly, namely the number of seconds from 1970-01-01 00:00:00",
    "dateFormat": "Supported data inserting methods: <br />Call function date(), for example: date('2021-03-17')",
    "timeFormat": "Supported data inserting methods: <br />Call function time(), for example: time('17:53:59')",
    "datetimeFormat": "Supported data inserting methods: <br />Call function datetime(), for example: datetime('2021-03-17T17:53:59')",
    "geographyFormat": "Supported data inserting methods: <br /> Call function ST_GeogFromText(), for example:ST_GeogFromText('POINT(6 10)')",
    "geography(point)Format": "Supported data inserting methods: <br /> Call function ST_GeogFromText('POINT()'), for example:ST_GeogFromText('POINT(6 10)')",
    "geography(linestring)Format": "Supported data inserting methods: <br /> Call function ST_GeogFromText('LINESTRING()'), for example:ST_GeogFromText('LINESTRING(3 4,10 50,20 25)')",
    "geography(polygon)Format": "Supported data inserting methods: <br /> Call function ST_GeogFromText('POLYGON()'), for example:ST_GeogFromText('POLYGON((1 1,5 1,5 5,1 5,1 1),(2 2,2 3,3 3,3 2,2 2))')",
    "cancelOperation": "Do you want to close this panel",
    "cancelPropmt": "If you close the panel, the configuration will be deleted automatically. Are you sure that you want to close the panel?",
    "fieldDisabled": "A TTL configuration is set for this property, so it cannot be edited. If you want to edit this property, delete the TTL configuration.",
    "ttlRequired": "ttl_col and ttl_duration are required.",
    "fieldRequired": "Property name and its data type are required",
    "indexExist": "An index exists, so TTL configuration is not permitted. A tag or edge type cannot have both an index and TTL configuration.",
    "indexType": "Index Type",
    "indexName": "Index Name",
    "indexFields": "Indexed Properties",
    "dragSorting": "(Drag to Sort)",
    "selectFields": "Choose Property",
    "indexedLength": "Indexed length",
    "indexedLengthDescription": "Set the indexed string length. If you are indexing fixed strings, you must not set this option.",
    "indexedLengthRequired": "Indexed length must be a positive integer",
    "backToTagList": "Back to Tag List",
    "backToEdgeList": "Back to Edge Type List",
    "backToIndexList": "Back to Index List",
    "leavePage": "Whether to leave the current page?",
    "leavePagePrompt": "You have unsaved changes to the record on this tab. If you leave this tab without saving the changes, they will be lost. Are you sure that you want to leave?"
  }
}
